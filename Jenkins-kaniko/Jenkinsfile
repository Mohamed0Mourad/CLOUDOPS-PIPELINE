pipeline {
  agent {
    kubernetes {
      yaml """ 
        apiVersion: v1
        kind: Pod
        metadata:
          name: kaniko
          namespace: jenkins-ns
        spec:
          containers:
          - name: kaniko
            image: gcr.io/kaniko-project/executor:debug
            command:
            - /busybox/cat
            tty: true
            env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_SECRET_ACCESS_KEY
            volumeMounts:
            - name: aws-config
              mountPath: /kaniko/.aws
          volumes:
            - name: aws-config
              secret:
                secretName: aws-credentials
      """
    }
  }

  environment {
    AWS_REGION = 'us-east-1'
    ECR_REGISTRY = '773893527461.dkr.ecr.us-east-1.amazonaws.com'
    ECR_REPOSITORY = 'node-app-jenkins'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build & Push to ECR') {
      when {
        changeset "nodeapp/**"
      }
      steps {
        container('kaniko') {
          script {
            sh '''
            echo "=== Debug: Workspace Path ==="
            pwd
            echo "=== Debug: List workspace ==="
            ls -la

            # Create Docker config for ECR
            mkdir -p /kaniko/.docker
            cat > /kaniko/.docker/config.json <<EOF
            {
                "credHelpers": {
                    "$ECR_REGISTRY": "ecr-login"
                }
            }
            EOF

            # Build and push using Kaniko
            /kaniko/executor \
                --context=$PWD \
                --context-sub-path=nodeapp \
                --dockerfile=Dockerfile \
                --destination=$ECR_REGISTRY/$ECR_REPOSITORY:v$BUILD_NUMBER
            '''
          }
        }
      }
    }

    stage('Notify Slack') {
      steps {
        script {
          slackSend(
            channel: 'eks-jenkins-notifications',
            attachments: [
              [
                fallback: 'Build Info',
                color: '#36a64f',
                title: 'Build Complete',
                title_link: "${env.BUILD_URL}",
                text: 'âœ… Jenkins build finished ya Za3ama.',
                image_url: 'https://mediaaws.almasryalyoum.com/news/large/2025/01/16/2583858_0.jpg'
              ]
            ]
          )
        }
      }
    }
  }
}
