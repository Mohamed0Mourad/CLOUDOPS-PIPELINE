pipeline {
    agent {
        kubernetes {
            yaml '''
            apiVersion: v1
            kind: Pod
            metadata:
                name: kaniko
                namespace: jenkins-ns
            spec:
                containers:
                    - name: kaniko
                      image: gcr.io/kaniko-project/executor:debug
                      command:
                          - /busybox/cat
                      tty: true
                      volumeMounts:
                          - name: aws-config
                            mountPath: /kaniko/.aws

                    - name: trivy
                      image: aquasec/trivy:latest
                      command:
                          - cat
                      tty: true
                      volumeMounts:
                          - name: trivy-cache
                          mountPath: /root/.cache/trivy
                          - name: workspace
                          mountPath: /workspace

                      env:
                          - name: TZ
                            value: "Africa/Cairo"
                          - name: AWS_ACCESS_KEY_ID
                            valueFrom:
                                secretKeyRef:
                                    name: aws-credentials
                                    key: AWS_ACCESS_KEY_ID
                          - name: AWS_SECRET_ACCESS_KEY
                            valueFrom:
                                secretKeyRef:
                                    name: aws-credentials
                                    key: AWS_SECRET_ACCESS_KEY
                volumes:
                    - name: aws-config
                      secret:
                          secretName: aws-credentials
                    - name: trivy-cache
                      emptyDir: {}
                    - name: workspace
                      emptyDir: {}
            '''
        }
    }

    environment {
        AWS_REGION = 'us-east-1'
        ECR_REGISTRY = '773893527461.dkr.ecr.us-east-1.amazonaws.com'
        ECR_REPOSITORY = 'node-app-jenkins'
        TARGET_FOLDER = 'nodeapp'  // Specify the folder you want to watch for changes
    }

    triggers {
        githubPush()  // This triggers the pipeline when a push is made to the GitHub repository
    }

    stages {
        // Stage to checkout the code from GitHub
        stage('Checkout') {
            steps {
                git url: 'https://github.com/hosseldin/CLOUDOPS-APP-PIPELINE.git', branch: 'main'
            }
        }

        stage('Build with Kaniko + Prepare Trivy Scan (No Push)') {
            steps {
                container('kaniko') {
                    sh """
                        /kaniko/executor \
                        --context=dir://${WORKSPACE}/${TARGET_FOLDER} \
                        --dockerfile=${WORKSPACE}/${TARGET_FOLDER}/Dockerfile \
                        --no-push \
                        --tarPath=/workspace/image.tar
                    """
                }
            }
        }

        stage('Scan with Trivy') {
            steps {
                container('trivy') {
                    sh """
                        trivy image \
                        --exit-code 1 \
                        --severity CRITICAL,HIGH \
                        --no-progress \
                        --input /workspace/image.tar
                    """
                }
            }
        }

        // Stage 3: Push to ECR only if scan passed
        stage('Push Verified Image to ECR') {
            steps {
                container('kaniko') {
                    script {
                        sh """
                            /kaniko/executor \
                            --tarPath=/workspace/image.tar \
                            --destination=${ECR_REGISTRY}/${ECR_REPOSITORY}:v${BUILD_NUMBER} \
                            --cache
                        """
                        echo "✅ Successfully pushed to ECR!"
                    }
                }
            }
        }

        // // Stage for building and pushing to ECR (only if the folder was changed)
        // stage('Build and Push to ECR') {
        //     steps {
        //         container('kaniko') {
        //             script {                    
        //                 // Using Jenkins' BUILD_NUMBER as the image tag
        //                 def imageTag = "v${BUILD_NUMBER}"

        //                 sh """
        //                     export TZ="Africa/Cairo"
        //                     mkdir -p /kaniko/.docker
        //                     echo '{"credHelpers": {"${ECR_REGISTRY}": "ecr-login"}}' > /kaniko/.docker/config.json

        //                     /kaniko/executor \
        //                     --context=git://github.com/hosseldin/CLOUDOPS-APP-PIPELINE.git#refs/heads/main \
        //                     --context-sub-path=nodeapp \
        //                     --dockerfile=Dockerfile \
        //                     --destination=${ECR_REGISTRY}/${ECR_REPOSITORY}:${imageTag}
        //                 """
        //                 echo "✅ Successfully pushed image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${imageTag}"
        //             }
        //         }
        //     }
        // }

        // Stage for notifying Slack
        stage('Notify Slack') {
            steps {
                script {
                    slackSend(
                        channel: 'eks-jenkins-notifications',
                        attachments: [
                            [
                                fallback: "Build #${env.BUILD_NUMBER} finished",
                                color: '#36a64f',
                                title: "Build #${env.BUILD_NUMBER} Complete",
                                text: "Project: *${env.JOB_NAME}*\nBranch: *${env.GIT_BRANCH}*\nStatus: *SUCCESS*\nCommit: *${env.GIT_COMMIT}*",
                                fields: [
                                    [
                                        title: "Started by",
                                        value: "${currentBuild.getBuildCauses()[0].userName ?: 'Auto Triggered'}",
                                        short: true
                                    ],
                                    [
                                        title: "Duration",
                                        value: "${currentBuild.durationString}",
                                        short: true
                                    ]
                                ],
                                image_url: 'https://mediaaws.almasryalyoum.com/news/large/2025/01/16/2583858_0.jpg'
                            ]
                        ]
                    )
                }
            }
        }
    }
}


    // agent {
    //     kubernetes {
    //         yaml '''
    //         apiVersion: v1
    //         kind: Pod
    //         metadata:
    //             name: kaniko
    //             namespace: jenkins-ns
    //         spec:
    //             containers:
    //                 - name: kaniko
    //                     image: gcr.io/kaniko-project/executor:debug
    //                     command:
    //                         - /busybox/cat
    //                     tty: true
    //                     env:
    //                         - name: TZ
    //                             value: "Africa/Cairo"
    //                         - name: AWS_ACCESS_KEY_ID
    //                             valueFrom:
    //                                 secretKeyRef:
    //                                     name: aws-credentials
    //                                     key: AWS_ACCESS_KEY_ID
    //                         - name: AWS_SECRET_ACCESS_KEY
    //                             valueFrom:
    //                                 secretKeyRef:
    //                                     name: aws-credentials
    //                                     key: AWS_SECRET_ACCESS_KEY
    //                     volumeMounts:
    //                         - name: aws-config
    //                             mountPath: /kaniko/.aws
    //             volumes:
    //                 - name: aws-config
    //                     secret:
    //                         secretName: aws-credentials
    //         '''
    //     }
    // }