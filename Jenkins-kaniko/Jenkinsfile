pipeline {
    agent {
        kubernetes {
            yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: cicd-pod
  namespace: jenkins-ns
spec:
  serviceAccountName: kaniko-sa
  containers:
    - name: kaniko
      image: gcr.io/kaniko-project/executor:debug
      command: ["/busybox/cat"]
      tty: true
      volumeMounts:
        - name: workspace
          mountPath: /workspace
    - name: trivy
      image: aquasec/trivy:latest
      command: ["cat"]
      tty: true
      volumeMounts:
        - name: workspace
          mountPath: /workspace
    - name: sonar-scanner
      image: sonarsource/sonar-scanner-cli:latest
      command: ["cat"]
      tty: true
      volumeMounts:
        - name: workspace
          mountPath: /workspace
  volumes:
    - name: workspace
      emptyDir: {}
'''
        }
    }

    environment {
        AWS_REGION = 'us-east-1'
        ECR_REGISTRY = '773893527461.dkr.ecr.us-east-1.amazonaws.com'
        ECR_REPOSITORY = 'node-app-jenkins'
        TARGET_FOLDER = '.'
    }

    triggers {
        githubPush()
    }

    stages {

        stage('Checkout') {
            steps {
                git url: 'https://github.com/hosseldin/CLOUDOPS-APP-PIPELINE.git', branch: 'main'
            }
        }

        stage('SonarQube Analysis') {
            environment {
                SONAR_SCANNER_OPTS = "-server"
            }
            steps {
                container('sonar-scanner') {
                    withSonarQubeEnv('MySonarQubeServer') {
                        withCredentials([string(credentialsId: 'SONAR_AUTH_TOKEN', variable: 'SONAR_AUTH_TOKEN')]) {
                            sh """
                                sonar-scanner \
                                -Dsonar.projectKey=node-app-jenkins \
                                -Dsonar.sources=${TARGET_FOLDER} \
                                -Dsonar.host.url=$SONAR_HOST_URL \
                                -Dsonar.login=$SONAR_AUTH_TOKEN
                            """
                        }
                    }
                }
            }
        }

        stage('Build with Kaniko (No Push)') {
            steps {
                container('kaniko') {
                    sh """
                        /kaniko/executor \
                        --context=dir://${WORKSPACE}/${TARGET_FOLDER} \
                        --dockerfile=${WORKSPACE}/${TARGET_FOLDER}/Dockerfile \
                        --no-push \
                        --tarPath=/workspace/image.tar
                    """
                }
            }
        }

        stage('Scan with Trivy') {
            steps {
                container('trivy') {
                    sh """
                        trivy image \
                        --exit-code 0 \
                        --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL \
                        --no-progress \
                        --input /workspace/image.tar
                    """
                }
            }
        }

        stage('Push Image to ECR') {
            steps {
                container('kaniko') {
                    sh """
                        /kaniko/executor \
                        --tarPath=/workspace/image.tar \
                        --destination=${ECR_REGISTRY}/${ECR_REPOSITORY}:v${BUILD_NUMBER} \
                        --dockerfile=${WORKSPACE}/${TARGET_FOLDER}/Dockerfile \
                        --cache
                    """
                }
            }
        }

        stage('Slack Notification') {
            steps {
                script {
                    slackSend(
                        channel: 'eks-jenkins-notifications',
                        attachments: [
                            [
                                fallback: "Build #${env.BUILD_NUMBER} finished",
                                color: '#36a64f',
                                title: "Build #${env.BUILD_NUMBER} Complete",
                                text: "Project: *${env.JOB_NAME}*\nBranch: *${env.GIT_BRANCH}*\nStatus: *SUCCESS*\nCommit: *${env.GIT_COMMIT}*",
                                fields: [
                                    [
                                        title: "Started by",
                                        value: "${currentBuild.getBuildCauses()[0].userName ?: 'Auto Triggered'}",
                                        short: true
                                    ],
                                    [
                                        title: "Duration",
                                        value: "${currentBuild.durationString}",
                                        short: true
                                    ]
                                ],
                                image_url: 'https://mediaaws.almasryalyoum.com/news/large/2025/01/16/2583858_0.jpg'
                            ]
                        ]
                    )
                }
            }
        }
    }
}



// pipeline {

//     agent {
//         kubernetes {
//             yaml '''
//             apiVersion: v1
//             kind: Pod
//             metadata:
//               name: kaniko
//               namespace: jenkins-ns
//             spec:
//               serviceAccountName: kaniko-sa
//               containers:
//                 - name: kaniko
//                   image: gcr.io/kaniko-project/executor:debug
//                   command:
//                     - /busybox/cat
//                   tty: true
//                   volumeMounts:
//                     - name: workspace
//                       mountPath: /workspace
//                 - name: trivy
//                   image: aquasec/trivy:latest
//                   command:
//                     - cat
//                   tty: true
//                   volumeMounts:
//                     - name: workspace
//                       mountPath: /workspace
//                   env:
//                     - name: TZ
//                       value: "Africa/Cairo"
//                 - name: sonar-scanner
//                   image: sonarsource/sonar-scanner-cli:latest
//                   command:
//                     - cat
//                   tty: true
//                   volumeMounts:
//                     - name: workspace
//                       mountPath: /workspace
//               volumes:
//                 - name: workspace
//                   emptyDir: {}
//             '''
//         }
//     }

//     environment {
//         AWS_REGION = 'us-east-1'
//         ECR_REGISTRY = '773893527461.dkr.ecr.us-east-1.amazonaws.com'
//         ECR_REPOSITORY = 'node-app-jenkins'
//         TARGET_FOLDER = '.' // use '.' if files are in repo root
//     }

//     triggers {
//         githubPush()
//     }

//     stages {
//         stage('Checkout') {
//             steps {
//                 git url: 'https://github.com/hosseldin/CLOUDOPS-APP-PIPELINE.git', branch: 'main'
//             }
//         }

//         stage('SonarQube Code Analysis') {
//             steps {
//                 container('sonar-scanner') {
//                     withSonarQubeEnv('MySonarQubeServer') {
//                         sh """
//                             sonar-scanner \
//                             -Dsonar.projectKey=node-app-jenkins \
//                             -Dsonar.sources=${TARGET_FOLDER} \
//                             -Dsonar.host.url=$SONAR_HOST_URL \
//                             -Dsonar.login=$SONAR_AUTH_TOKEN
//                         """
//                     }
//                 }
//             }
//         }



//         stage('Build with Kaniko + Prepare Trivy Scan (No Push)') {
//             steps {
//                 container('kaniko') {
//                     sh """
//                         /kaniko/executor \
//                         --context=dir://${WORKSPACE}/${TARGET_FOLDER} \
//                         --dockerfile=${WORKSPACE}/${TARGET_FOLDER}/Dockerfile \
//                         --no-push \
//                         --tarPath=/workspace/image.tar
//                     """
//                 }
//             }
//         }

//         stage('Scan with Trivy') {
//             steps {
//                 container('trivy') {
//                     sh """
//                         trivy image \
//                         --exit-code 0 \
//                         --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL \
//                         --no-progress \
//                         --input /workspace/image.tar
//                     """
//                 }
//             }
//         }

//         stage('Push Verified Image to ECR') {
//             steps {
//                 container('kaniko') {
//                     script {
//                         sh """
//                             /kaniko/executor \
//                             --tarPath=/workspace/image.tar \
//                             --destination=${ECR_REGISTRY}/${ECR_REPOSITORY}:v${BUILD_NUMBER} \
//                             --dockerfile=${WORKSPACE}/${TARGET_FOLDER}/Dockerfile \
//                             --cache
//                         """
//                         echo "âœ… Successfully pushed to ECR!"
//                     }
//                 }
//             }
//         }

//         stage('Notify Slack') {
//             steps {
//                 script {
//                     slackSend(
//                         channel: 'eks-jenkins-notifications',
//                         attachments: [
//                             [
//                                 fallback: "Build #${env.BUILD_NUMBER} finished",
//                                 color: '#36a64f',
//                                 title: "Build #${env.BUILD_NUMBER} Complete",
//                                 text: "Project: *${env.JOB_NAME}*\nBranch: *${env.GIT_BRANCH}*\nStatus: *SUCCESS*\nCommit: *${env.GIT_COMMIT}*",
//                                 fields: [
//                                     [
//                                         title: "Started by",
//                                         value: "${currentBuild.getBuildCauses()[0].userName ?: 'Auto Triggered'}",
//                                         short: true
//                                     ],
//                                     [
//                                         title: "Duration",
//                                         value: "${currentBuild.durationString}",
//                                         short: true
//                                     ]
//                                 ],
//                                 image_url: 'https://mediaaws.almasryalyoum.com/news/large/2025/01/16/2583858_0.jpg'
//                             ]
//                         ]
//                     )
//                 }
//             }
//         }
//     }
// }
